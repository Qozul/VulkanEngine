#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable
#include "./definitions.glsl"
#include "./functions.glsl"

layout(local_size_x = IRRADIANCE_TEXTURE_WIDTH, local_size_y = IRRADIANCE_TEXTURE_HEIGHT) in;
/**/
layout(binding = 0) uniform writeonly IrradianceImage outDeltaIrradiance;
layout(binding = 1) uniform AtmosParamsBuffer {
	AtmosphereParameters atmosphere;
	mat3 luminance_from_radiance;
	int scattering_order;
} Params;
layout(binding = 2) uniform writeonly IrradianceImage outIrradiance;
layout(binding = 3) uniform ScatteringTexture inSingleRayleighScatterTexture;
layout(binding = 4) uniform ScatteringTexture inSingleMieScatterTexture;
layout(binding = 5) uniform ScatteringTexture inMultipleScatterTexture;

void main(void)
{
	imageStore(outDeltaIrradiance, ivec2(gl_GlobalInvocationID.xy),
		vec4(ComputeIndirectIrradianceTexture(Params.atmosphere, inSingleRayleighScatterTexture,
		inSingleMieScatterTexture, inMultipleScatterTexture, gl_GlobalInvocationID.xy, 
		Params.scattering_order), 0.0));
}
