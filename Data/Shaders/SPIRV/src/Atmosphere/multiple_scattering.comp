#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable
#include "./definitions.glsl"
#include "./functions.glsl"

layout(local_size_x=SCATTERING_TEXTURE_WIDTH, local_size_y = SCATTERING_TEXTURE_HEIGHT,
	local_size_z = SCATTERING_TEXTURE_DEPTH) in;

layout(binding = 0) uniform TransmittanceTexture inTransmittanceTexture;
layout(binding = 1) uniform AtmosParamsBuffer {
	PrecomputationData Params;
};
layout(binding = 3) uniform writeonly ScatteringImage outScatterTexture;
layout(binding = 7) uniform ScatteringDensityTexture inScatteringDensityTexture;
layout(binding = 8) uniform writeonly ScatteringImage outDeltaMultipleScatterTexture;

void main(void)
{
	float nu;
	RadianceSpectrum deltaMultipleScatter = ComputeMultipleScatteringTexture(
		Params.atmosphere, inTransmittanceTexture, inScatteringDensityTexture, 
		gl_GlobalInvocationID.xyz, nu);
	imageStore(outDeltaMultipleScatterTexture, ivec3(gl_GlobalInvocationID.xyz), vec4(deltaMultipleScatter, 0.0));
		
	imageStore(outScatterTexture, ivec3(gl_GlobalInvocationID.xyz), vec4(Params.luminance_from_radiance * 
		deltaMultipleScatter / RayleighPhaseFunction(nu), 0.0));
}