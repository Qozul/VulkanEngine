Each file should be refactored with the following ideas in mind:

[Style, Clean, Descriptive, Efficient]

TODO:
 - RenderStorage: (The general structure of the buffers aren't great with templates, give them a good thunk. The storage should be changed to remember why it is in arrays)
	- DynamicVertexBuffer [n,n,n,n]
	- ElementBuffer [n,n,n,n]
	- ElementBufferInterface [n,n,n,n]
	- RenderStorage [n,n,n,n]
 - DeviceMemory [n,n,n,n]
 - GlobalRenderData [n,n,n,n] (Rename to GlobalDescriptor)
 - GraphicsMaster [n,n,n,n]
 - LogicDevice [n,n,n,n]
 - PhysicalDevice [n,n,n,n]
 - SwapChain [n,n,n,n]
 - Vertex [n,n,n,n]

 - System [n,n,n,n]
 - SystemMasters (Note, want quick getters for the important things) [n,n,n,n]

 - Visual Studio Filters. -------------

 - References

 - Warnings

 - LogicalCamera, then everything has camera position too
	NOTE that if the scene was drawn with a different camera (e.g. for water) then it would still have the lighting based on the main camera
	Therefore, if swapping camera, just update global render data.

TODO:
 - release material reference tracking
 - load texture, provide stage flag -----------
 - Material.h input validation
 - Look at enum types and constants and change to have k prefix
 - In code TODOs
 - Precompiled headers where appropriate