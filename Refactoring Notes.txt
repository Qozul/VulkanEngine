Each file should be refactored with the following ideas in mind:

[Style, Clean, Descriptive, Efficient]

TODO:
 - DeviceMemory [n,n,n,n]
 - GlobalRenderData [n,n,n,n] (Rename to GlobalDescriptor)
 - GraphicsMaster [n,n,n,n]
 - LogicDevice [n,n,n,n]
 - PhysicalDevice [n,n,n,n]
 - SwapChain [n,n,n,n]

 - System [n,n,n,n]
 - SystemMasters (Note, want quick getters for the important things) [n,n,n,n]

 - References

 - LogicalCamera, then everything has camera position too
	NOTE that if the scene was drawn with a different camera (e.g. for water) then it would still have the lighting based on the main camera
	Therefore, if swapping camera, just update global render data.

TODO:
 - release material reference tracking
 - Material.h input validation
 - Look at enum types and constants and change to have k prefix
 - In code TODOs
 - Go through headers and do as many forward declarations as possible
 - Correct size buffers for each frame
 - GlobalRenderData need a good looking at

Possible future stuff:
 - vkCmdDrawIndexedIndirect
 - https://stackoverflow.com/questions/5177046/how-to-use-precompiled-headers-efficiently-using-yc-and-yu-options